scoring:
  system: |
    You are a neutral curator for github repositories.
  fewshot: |
    Examples (format matches schema).

    Repo:
    "Beatstore marketplace: upload & license beats, set pricing, cart/checkout, artist pages."
    Response:
    {
      "scores": [
        { "list": "growth-monetization", "score": 0.9, "why": "Directly enables selling/licensing music for income." },
        { "list": "content-publishing", "score": 0.5, "why": "Artists publish and showcase their work via storefront pages." }
      ]
    }

    Repo:
    "Self-hosted community platform: forums, chat, events, moderation, invites."
    Response:
    {
      "scores": [
        { "list": "communication-community", "score": 0.9, "why": "Explicit community-building features like forums and chat." },
        { "list": "project-collaboration", "score": 0.4, "why": "Moderation and events coordinate group activity." }
      ]
    }

    Repo:
    "Project-based 'Build a RAG app' course: 8 modules, exercises with solutions, evaluation harness."
    Response:
    {
      "scores": [
        { "list": "learning-resources", "score": 0.95, "why": "Structured curriculum with modules, exercises, and assessments." },
        { "list": "ai-machine-learning", "score": 0.6, "why": "Focus on RAG/LLM techniques and evaluation." }
      ]
    }

    Repo:
    "Workflow engine with drag-and-drop editor: automate tasks across APIs, cron triggers, webhook listeners."
    Response:
    {
      "scores": [
        { "list": "automation-workflows", "score": 0.9, "why": "Low-code workflow automation with triggers and API integrations." },
        { "list": "productivity-utilities", "score": 0.5, "why": "Simplifies repetitive multi-step actions for efficiency." }
      ]
    }

    Repo:
    "Headless CMS with GraphQL API, plugin system, and markdown blog support."
    Response:
    {
      "scores": [
        { "list": "content-publishing", "score": 0.9, "why": "CMS and blog features for publishing workflows." },
        { "list": "business-commerce", "score": 0.3, "why": "Plugin system may extend into e-commerce integrations." }
      ]
    }
  criteria: |
    ai-machine-learning = models/training/inference/eval; llm/rag pipelines and frameworks; cv/nlp datasets and tools.
    productivity-utilities = runnable automation or one-command multi-step actions; cli helpers; utilities that simplify workflows or daily tasks.
    content-publishing = cms, blogs, static site generators, publishing engines, lms platforms, plugins/extensions that enable content creation/distribution.
    interesting-to-explore = quirky, niche, or novel repos worth browsing; not directly actionable but thought-provoking or knowledge-rich.
    learning-resources = course/curriculum with exercises/assessments; repos explicitly built to teach; direct educational resources.
    valuable-resources = practical references, toolkits, cheatsheets, or aggregated knowledge with long-term use; non-niche utility.
    communication-community = explicit community features (chat/forums/video/social networking/federated tools); tools built for interaction.
    growth-monetization = concrete systems/courses to make money (bots, arbitrage, dropshipping, affiliate); repos explicitly tied to growth/marketing experiments; includes "free" monetisation resources.
    business-commerce = open-source platforms for business ops: e-commerce, payments, billing, crm, erp; repos enabling financial transactions or store-building.
    project-collaboration = task boards, pm tools, wikis, okrs, coordination platforms; repos designed to help teams work together.
    automation-workflows = low-code/no-code integration tools; workflow automation engines; etl/data pipelines; self-hosted zapier-like projects.
    blockchain-finance = smart contracts, wallets, swaps, defi protocols, on-chain ops/analytics; repos tied to blockchain + finance infra.
    technical-thought-leadership = repos showcasing leadership practices, onboarding frameworks, rituals, okr systems, engineering culture; tools/resources tied to scaling teams or leading effectively.
summarise:
  one_paragraph: |
    Write ONE paragraph (≤100 words) that explains the project in plain language 
    for a general audience with no technical background. 
    Focus on what it does and why it matters. 
    Keep it clear, simple, and factual. Do not use bullet points, headings, or em dashes.

  map_header: |
    From the following text, extract 2-3 short bullets (10-18 words each) in plain language. 
    Summarise what the project does and why it might be useful. 
    Return only bullets prefixed with "- ".

  reduce: |
    Write ONE paragraph (≤100 words) in plain language for a general audience. 
    Explain what the project does and why it might be useful. 
    Keep it clear, simple, and factual. 
    Return only the paragraph, no bullet points or em dashes.

