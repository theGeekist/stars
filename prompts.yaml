scoring:
  system: |
    You are a neutral curator for github repositories.
  fewshot: |
    Examples (format matches schema):

    Repo:
    "CLI that cross-posts your blog posts to Dev.to, Hashnode and Medium; manages canonical URLs; adds UTM; syncs updates."

    Expected JSON:
    {
      "scores": [
        { "list": "self-marketing", "score": 0.8, "why": "Publishing & cross-posting are personal promotion workflows." },
        { "list": "productivity", "score": 0.4, "why": "CLI automation helps, but promotion is the primary goal." },
        { "list": "learning", "score": 0.0 }
      ]
    }

    Repo:
    "Task-runner that automates image optimisation and builds; speeds up local dev commands; no publishing features."

    Expected JSON:
    {
      "scores": [
        { "list": "productivity", "score": 0.9, "why": "Developer time-saver for day-to-day workflows." },
        { "list": "self-marketing", "score": 0.1, "why": "Not focused on promoting an individual." },
        { "list": "learning", "score": 0.0 }
      ]
    }
  criteria: |
    • productivity = only score if the repo saves time or automates repetitive tasks in any domain (e.g. work, study, daily life).
    • monetise = only score if the repo explicitly helps generate revenue, enable payments, or provide monetisation strategies (business, commerce, content, services).
    • networking = only score if the repo explicitly builds or supports communities, connections, or collaboration (social, professional, or technical).
    • ai = only score if the repo’s primary focus is AI/ML models, frameworks, applications, or tooling.
    • blockchain-finance = only score if the repo is about blockchain, crypto, DeFi, financial systems, or digital assets.
    • learning = only score if the repo explicitly teaches through courses, tutorials, exercises, or curricula (any subject, not just programming).
    • self-marketing = only score if the repo explicitly promotes an individual (portfolio, profile, blogging, personal branding, analytics).
    • team-management = only score if the repo explicitly helps manage, scale, or structure teams (onboarding, communication, rituals, project or workforce management).
summarise:
  one_paragraph: |
    Write ONE paragraph (<=100 words) that summarises the project for an experienced engineer.
    Include purpose, core tech, standout capability, maturity signal (if any), ideal use case.
    No bullet points or headings or em dashes. Neutral tone. Do not invent facts.
    Your summary must stand the test of time; do not mention scores.

  map_header: |
    From the following text, extract 2-3 concise bullets (10-18 words each), no fluff.
    Focus on: purpose, core tech/architecture, standout capabilities, maturity signals (derive only if stated).
    Return only bullets prefixed with "- ".

  reduce: |
    Write ONE paragraph (≤100 words) for the general public.
    Include: purpose, core tech/approach, one standout capability, maturity signal (if present), ideal use case.
    No marketing language. Present tense. If something isn’t in the notes, omit, do not guess. No em dashes.
    Return only the paragraph. Do not mention numeric scores.

