{
	"name": "@geekist/stars",
	"version": "0.1.0",
	"type": "module",
	"description": "Query GitHub Stars Lists via GraphQL and enrich repos with health signals.",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/theGeekist/stars.git"
	},
	"homepage": "https://github.com/theGeekist/stars#readme",
	"bugs": {
		"url": "https://github.com/theGeekist/stars/issues"
	},
	"license": "MIT",
	"author": "J (Jason) <hello@geekist.dev>",
	"exports": {
		".": {
			"types": "./dist/index.d.ts",
			"import": "./dist/index.js"
		}
	},
	"bin": {
		"gk-stars": "./dist/cli.js"
	},
	"scripts": {
		"ingest": "bun run src/cli.ts ingest",
		"score:one": "bun run src/cli.ts score --one",
		"score:batch": "bun run src/cli.ts score --all",
		"sum:one": "bun run src/cli.ts summarise --one",
		"sum:batch": "bun run src/cli.ts summarise --all",
		"serve": "bun run src/server.ts",
		"rebuild": "rm -f repolists.db && bun run src/cli.ts ingest",
		"dev": "bun run src/server.ts",
		"types": "tsc -p tsconfig.json --noEmit",
		"check": "bun run types && echo 'âœ“ typecheck ok'",
		"start": "bun run src/cli.ts",
		"build": "bun build ./src/index.ts --target bun --outdir dist && bun build ./src/cli.ts --target bun --outfile dist/cli.js",
		"prepare": "husky",
		"prepublishOnly": "bun run build",
		"test": "bun test src/features src/lib",
		"coverage": "bun --coverage test src/features src/lib",
		"lint": "biome check .",
		"format": "biome format --write ."
	},
	"engines": {
		"bun": ">=1.1.0"
	},
	"module": "src/index.ts",
	"private": true,
	"devDependencies": {
		"@biomejs/biome": "^2.2.2",
		"@types/bun": "latest",
		"husky": "^9.1.7",
		"lint-staged": "^16.1.6"
	},
	"peerDependencies": {
		"typescript": "^5"
	},
	"dependencies": {
		"@jasonnathan/llm-core": "^1.3.8",
		"@llamaindex/readers": "^3.1.19",
		"cheerio": "^1.1.2",
		"hono": "^4.9.5",
		"json2csv": "^6.0.0-alpha.2",
		"llamaindex": "^0.11.28",
		"ollama": "^0.5.17",
		"zod": "^4.1.5",
		"zod-to-json-schema": "^3.24.6"
	},
	"lint-staged": {
		"*.{ts,tsx,js,jsx,cjs,mjs,json,md,csv}": [
			"bunx biome format --write",
			"bunx biome lint --fix"
		],
		"*.{json,css,md,mdx}": [
			"bunx biome format --write"
		]
	}
}
